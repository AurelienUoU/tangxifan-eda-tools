<architecture>
  <models>
  </models>
  <layout auto="1.0"/>
  <spice_settings>
    <parameters>
      <options sim_temp="25" post="off" captab="off" fast="on"/>
      <measure sim_num_clock_cycle="auto" accuracy="1e-13" accuracy_type="abs">
        <slew>
          <rise upper_thres_pct="0.95" lower_thres_pct="0.05"/>
          <fall upper_thres_pct="0.05" lower_thres_pct="0.95"/>
        </slew>
        <delay>
          <rise input_thres_pct="0.5" output_thres_pct="0.5"/>
          <fall input_thres_pct="0.5" output_thres_pct="0.5"/>
        </delay>
      </measure>
      <stimulate>
        <clock sim_slack="0.2">
          <rise slew_time="50e-12" slew_type="abs"/>
          <fall slew_time="50e-12" slew_type="abs"/>
        </clock>
        <input>
          <rise slew_time="100e-12" slew_type="abs"/>
          <fall slew_time="100e-12" slew_type="abs"/>
        </input>
      </stimulate>      
    </parameters>
    <tech_lib lib_type="industry" transistor_type="TT" lib_path="/home/xitang/tangxifan-eda-tools/branches/fpga_flow/tech/MM180_LVT18_V113.lib" nominal_vdd="1.8"/>
    <transistors pn_ratio="2.7" model_ref="M">
      <nmos model_name="N_LV_18_MM" chan_length="240e-9" min_width="500e-9"/>
      <pmos model_name="P_LV_18_MM" chan_length="240e-9" min_width="500e-9"/>
    </transistors> 
    <module_spice_models>
      <spice_model type="chan_wire" name="chan_segment" prefix="track_seg" is_default="1">
        <design_technology type="cmos"/>
        <input_buffer exist="off" type="inverter" size="4" tapered="off"/>
        <output_buffer exist="off" type="inverter" size="4" tapered="off"/>
        <port type="input" prefix="in" size="1"/>
        <port type="output" prefix="out" size="1"/>
        <wire_param model_type="pie" res_val="0" cap_val="0" level="1"/> <!-- model_type could be T, res_val and cap_val DON'T CARE -->
      </spice_model>
      <spice_model type="wire" name="direct_interc" prefix="direct_interc" is_default="1">
        <design_technology type="cmos"/>
        <input_buffer exist="off" type="inverter" size="4" tapered="off"/>
        <output_buffer exist="off" type="inverter" size="4" tapered="off"/>
        <port type="input" prefix="in" size="1"/>
        <port type="output" prefix="out" size="1"/>
        <wire_param model_type="pie" res_val="0" cap_val="0" level="1"/> <!-- model_type could be T, res_val cap_val should be defined -->
      </spice_model>
      <spice_model type="mux" name="ble_mux_buffered" prefix="ble_mux_buf" is_default="1">
        <design_technology type="cmos" structure="tree"/>
        <!--design_technology type="rram" ron="3e3" roff="1e6" prog_transistor_size="1"/-->
        <input_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <output_buffer exist="on" type="inverter" size="1" tapered="on" tap_buf_level="3" f_per_stage="4"/>
        <!--mux2to1 subckt_name="mux2to1"/-->
        <pass_gate_logic type="transmission_gate" nmos_size="1" pmos_size="2.7"/>
        <port type="input" prefix="in" size="1"/>
        <port type="output" prefix="out" size="1"/>
        <port type="sram" prefix="sram" size="1"/>
      </spice_model>
      <spice_model type="mux" name="localrouting_mux_buffered" prefix="localrouting_mux_buf">
        <design_technology type="cmos" structure="tree"/>
        <!--design_technology type="rram" ron="3e3" roff="1e6" prog_transistor_size="1"/-->
        <input_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <output_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <!--mux2to1 subckt_name="mux2to1"/-->
        <pass_gate_logic type="transmission_gate" nmos_size="1" pmos_size="2.7"/>
        <port type="input" prefix="in" size="1"/>
        <port type="output" prefix="out" size="1"/>
        <port type="sram" prefix="sram" size="1"/>
      </spice_model>
      <spice_model type="mux" name="cb_mux_buffered" prefix="cbmux_buf">
        <design_technology type="cmos" structure="tree"/>
        <!--design_technology type="rram" ron="3e3" roff="1e6" prog_transistor_size="1"/-->
        <input_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <output_buffer exist="on" type="inverter" size="1" tapered="on" tap_buf_level="3" f_per_stage="4"/>
        <!--mux2to1 subckt_name="mux2to1"/-->
        <pass_gate_logic type="transmission_gate" nmos_size="1" pmos_size="2.7"/>
        <port type="input" prefix="in" size="1"/>
        <port type="output" prefix="out" size="1"/>
        <port type="sram" prefix="sram" size="1"/>
      </spice_model>
      <spice_model type="mux" name="sb_mux_buffered" prefix="sbmux_buf">
        <design_technology type="cmos" structure="tree"/>
        <!--design_technology type="rram" ron="1e3" roff="1e6" prog_transistor_size="3"/-->
        <input_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <output_buffer exist="on" type="inverter" size="1" tapered="on" tap_buf_level="3" f_per_stage="4"/>
        <pass_gate_logic type="transmission_gate" nmos_size="1" pmos_size="2.7"/>
        <port type="input" prefix="in" size="1"/>
        <port type="output" prefix="out" size="1"/>
        <port type="sram" prefix="sram" size="1"/>
      </spice_model>
      <!--DFF subckt ports should be defined as <D> <Q> <CLK> <RESET> <SET>  -->
      <spice_model type="ff" name="static_dff" prefix="dff" netlist="/home/xitang/tangxifan-eda-tools/branches/fpga_flow/SpiceSubckts/ff.sp">
         <design_technology type="cmos"/>
         <!--design_technology type="rram" ron="1e3" roff="1e6" prog_transistor_size="1"/-->
         <input_buffer exist="on" type="inverter" size="1" tapered="off"/>
         <output_buffer exist="on" type="inverter" size="1" tapered="off"/>
         <pass_gate_logic type="transmission_gate" nmos_size="1" pmos_size="2.7"/>
         <port type="input" prefix="D" size="1"/>
         <port type="input" prefix="Set" size="1"/>
         <port type="input" prefix="Reset" size="1"/>
         <port type="output" prefix="Q" size="1"/>
         <port type="clock" prefix="clk" size="1"/>
      </spice_model>
      <spice_model type="lut" name="lut5" prefix="lut5">
        <design_technology type="cmos"/>
        <!--design_technology type="rram" ron="1e3" prog_transistor_size="1"/-->
        <lut_input_buffer exist="on" type="inverter" size="1" tapered="on" tap_buf_level="2" f_per_stage="2"/>
        <input_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <output_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <pass_gate_logic type="transmission_gate" nmos_size="1" pmos_size="2.7"/>
        <port type="input" prefix="in" size="5"/>
        <port type="output" prefix="out" size="1"/>
        <port type="sram" prefix="sram" size="32"/>
      </spice_model>
      <spice_model type="lut" name="lut6" prefix="lut6">
        <design_technology type="cmos"/>
        <!--design_technology type="rram" ron="1e3" prog_transistor_size="1"/-->
        <lut_input_buffer exist="on" type="inverter" size="1" tapered="on" tap_buf_level="2" f_per_stage="2"/>
        <input_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <output_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <pass_gate_logic type="transmission_gate" nmos_size="1" pmos_size="2.7"/>
        <port type="input" prefix="in" size="6"/>
        <port type="output" prefix="out" size="1"/>
        <port type="sram" prefix="sram" size="64"/>
      </spice_model>
      <spice_model type="sram" name="sram6T" prefix="sram" netlist="/home/xitang/tangxifan-eda-tools/branches/fpga_flow/SpiceSubckts/sram.sp">
        <design_technology type="cmos"/>
        <input_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <output_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <pass_gate_logic type="transmission_gate" nmos_size="1" pmos_size="2.7"/>
        <port type="input" prefix="in" size="1"/>
        <port type="output" prefix="out" size="2"/>
      </spice_model>
      <spice_model type="inpad" name="inpad" prefix="inpad" netlist="/home/xitang/tangxifan-eda-tools/branches/fpga_flow/SpiceSubckts/io.sp">
        <design_technology type="cmos"/>
        <input_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <output_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <pass_gate_logic type="transmission_gate" nmos_size="1" pmos_size="2.7"/>
        <port type="input" prefix="in" size="1"/>
        <port type="output" prefix="out" size="1"/>
      </spice_model>
      <spice_model type="outpad" name="outpad" prefix="outpad" netlist="/home/xitang/tangxifan-eda-tools/branches/fpga_flow/SpiceSubckts/io.sp">
        <design_technology type="cmos"/>
        <input_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <output_buffer exist="on" type="inverter" size="1" tapered="off"/>
        <pass_gate_logic type="transmission_gate" nmos_size="1" pmos_size="2.7"/>
        <port type="input" prefix="in" size="1"/>
        <port type="output" prefix="out" size="1"/>
      </spice_model>
    </module_spice_models>
  </spice_settings>
  <device>
    <sizing R_minW_nmos="8926" R_minW_pmos="16067" ipin_mux_trans_size="3.7"/>
    <timing C_ipin_cblock="3.76e-15" T_ipin_cblock="5.25e-10"/>
    <area grid_logic_tile_area="39152"/>
    <sram area="8" spice_model_name="sram6T"/>
    <chan_width_distr>
      <io width="1.0"/>
      <x distr="uniform" peak="1.0"/>
      <y distr="uniform" peak="1.0"/>
    </chan_width_distr>
    <switch_block type="wilton" fs="3"/>
  </device>
  <cblocks>
    <switch type="mux" name="cb_mux" R="0" Cin="3.76e-15" Cout="0" Tdel="5.25e-10" mux_trans_size="3.7" buf_size="77.7" spice_model_name="cb_mux_buffered" power_buf_size="21">
    </switch>
  </cblocks>
  <switchlist>
    <switch type="mux" name="0" R="364" Cin="3.76e-15" Cout="1.95e-13" Tdel="2.64e-10" mux_trans_size="3.7" buf_size="77.7" spice_model_name="sb_mux_buffered" power_buf_size="21"/>
  </switchlist>
  <segmentlist>
    <segment freq="1.0" length="4" type="unidir" Rmetal="13.73" Cmetal="2.06e-14" spice_model_name="chan_segment">
      <mux name="0"/>
      <sb type="pattern">
        1 1 1 1 1
      </sb>
      <cb type="pattern">
        1 1 1 1
      </cb>
    </segment>
  </segmentlist>
  <complexblocklist>
    <pb_type name="io" capacity="8" idle_mode_name="outpad">
      <input name="outpad" num_pins="1"/>
      <output name="inpad" num_pins="1"/>
      <clock name="clock" num_pins="1"/>
    
      <!-- IOs can operate as either inputs or outputs.
    	     Delays below come from Ian Kuon. They are small, so they should be interpreted as
    	     the delays to and from registers in the I/O (and generally I/Os are registered 
    	     today and that is when you timing analyze them.
    	     -->
      <mode name="inpad">
        <pb_type name="inpad" blif_model=".input" num_pb="1" spice_model_name="inpad">
          <output name="inpad" num_pins="1"/>
        </pb_type>
        <interconnect>
          <direct name="inpad" input="inpad.inpad" output="io.inpad">
            <delay_constant max="0" in_port="inpad.inpad" out_port="io.inpad"/>
          </direct>
        </interconnect>
    
      </mode>
      <mode name="outpad">
        <pb_type name="outpad" blif_model=".output" num_pb="1" spice_model_name="outpad">
          <input name="outpad" num_pins="1"/>
        </pb_type>
        <interconnect>
          <direct name="outpad" input="io.outpad" output="outpad.outpad">
            <delay_constant max="0" in_port="io.outpad" out_port="outpad.outpad"/>
          </direct>
        </interconnect>
      </mode>
    
      <!-- Every input pin is driven by 15% of the tracks in a channel, every output pin is driven by 10% of the tracks in a channel -->
      <fc default_in_type="frac" default_in_val="0.15" default_out_type="frac" default_out_val="0.10"/>
    
      <!-- IOs go on the periphery of the FPGA, for consistency, 
              make it physically equivalent on all sides so that only one definition of I/Os is needed.
              If I do not make a physically equivalent definition, then I need to define 4 different I/Os, one for each side of the FPGA
            -->
      <pinlocations pattern="custom">
        <loc side="left">io.outpad io.inpad io.clock</loc>
        <loc side="top">io.outpad io.inpad io.clock</loc>
        <loc side="right">io.outpad io.inpad io.clock</loc>
        <loc side="bottom">io.outpad io.inpad io.clock</loc>
      </pinlocations>
    
      <!-- Place I/Os on the sides of the FPGA -->
      <gridlocations>
        <loc type="perimeter" priority="10"/>
      </gridlocations>
    
      <power method="ignore"/>			
    </pb_type>
    <pb_type name="clb">
      <power method="specify-size"/>
      <input name="I" num_pins="33" equivalent="true">
        <power wire_capacitance="0" buffer_size="60"/>
      </input>
      <output name="O" num_pins="20" equivalent="false">
        <power wire_capacitance="0" buffer_size="85"/>
      </output>
      <clock name="clk" num_pins="1"/>

      <!-- Describe fracturable logic element.  
             Each fracturable logic element has a 6-LUT that can alternatively operate as two 5-LUTs with shared inputs. 
             The outputs of the fracturable logic element can be optionally registered
        -->
      <pb_type name="fle" num_pb="10" idle_mode_name="n2_lut5">
        <power method="specify-size"/>
        <input name="in" num_pins="6">
          <power wire_capacitance="0" buffer_size="2"/>
        </input>
        <output name="out" num_pins="2">
          <power wire_capacitance="0" buffer_size="1"/>
        </output>
        <clock name="clk" num_pins="1"/>

        <!-- Dual 5-LUT mode definition begin -->
        <mode name="n2_lut5">
          <pb_type name="lut5inter" num_pb="1">
            <input name="in" num_pins="5"/>
            <output name="out" num_pins="2"/>
            <clock name="clk" num_pins="1"/>
            <pb_type name="ble5" num_pb="2">
              <input name="in" num_pins="5"/>
              <output name="out" num_pins="1"/>
              <clock name="clk" num_pins="1"/> 

              <!-- Define the LUT -->
              <pb_type name="lut5" blif_model=".names" num_pb="1" class="lut" spice_model_name="lut5">
                <input name="in" num_pins="5" port_class="lut_in"/>
                <output name="out" num_pins="1" port_class="lut_out"/>
                <!-- LUT timing using delay matrix -->
                <!-- These are the physical delay inputs on a Stratix IV LUT but because VPR cannot do LUT rebalancing,
                           we instead take the average of these numbers to get more stable results
                      82e-12
                      173e-12
                      261e-12
                      263e-12
                      398e-12
                      -->
                <delay_matrix type="max" in_port="lut5.in" out_port="lut5.out">
                  1.15e-10
                  1.15e-10
                  1.15e-10
                  1.15e-10
                  1.15e-10
                </delay_matrix>
                <power method="pin-toggle">
                  <port name="in" energy_per_toggle="8.15e-13"/>
                  <static_power power_per_instance="1.05e-6"/>
                </power>
              </pb_type>

              <!-- Define the flip-flop -->
              <pb_type name="ff" blif_model=".latch" num_pb="1" class="flipflop" spice_model_name="static_dff">
                <input name="D" num_pins="1" port_class="D"/>
                <output name="Q" num_pins="1" port_class="Q"/>
                <clock name="clk" num_pins="1" port_class="clock"/>
                <T_setup value="6.85e-10" port="ff.D" clock="clk"/>
                <T_clock_to_Q max="1.1e-10" port="ff.Q" clock="clk"/>
                <power method="pin-toggle">
                  <port name="Q" energy_per_toggle="1.3e-13"/>
                  <static_power power_per_instance="5.025e-7"/>
                </power>
              </pb_type>

              <interconnect>
                <direct name="direct1" input="ble5.in[4:0]" output="lut5[0:0].in[4:0]"/>
                <direct name="direct2" input="lut5[0:0].out" output="ff[0:0].D">
                  <!-- Advanced user option that tells CAD tool to find LUT+FF pairs in netlist -->
                  <pack_pattern name="ble5" in_port="lut5[0:0].out" out_port="ff[0:0].D"/>
                </direct>
                <direct name="direct3" input="ble5.clk" output="ff[0:0].clk"/>                    
                <mux name="mux1" input="ff[0:0].Q lut5.out[0:0]" output="ble5.out[0:0]" spice_model_name="ble_mux_buffered">
                  <!-- LUT to output is faster than FF to output on a Stratix IV -->
                  <delay_constant max="3.3e-10" in_port="lut5.out[0:0]" out_port="ble5.out[0:0]" />
                  <delay_constant max="3.3e-10" in_port="ff[0:0].Q" out_port="ble5.out[0:0]" />
                </mux>
              </interconnect>
            </pb_type>
            <interconnect>
              <direct name="direct1" input="lut5inter.in" output="ble5[0:0].in"/>
              <direct name="direct2" input="lut5inter.in" output="ble5[1:1].in"/>
              <direct name="direct3" input="ble5[1:0].out" output="lut5inter.out"/>                 
              <complete name="complete1" input="lut5inter.clk" output="ble5[1:0].clk"/>                  
            </interconnect>
          </pb_type>
          <interconnect>
            <direct name="direct1" input="fle.in[4:0]" output="lut5inter.in"/>
            <direct name="direct2" input="lut5inter.out" output="fle.out"/>
            <direct name="direct3" input="fle.clk" output="lut5inter.clk"/>
          </interconnect>
        </mode> 
        <!-- Dual 5-LUT mode definition end -->
        <!-- 6-LUT mode definition begin -->
        <mode name="n1_lut6">
          <!-- Define 6-LUT mode -->
          <pb_type name="ble6" num_pb="1">
            <input name="in" num_pins="6"/>
            <output name="out" num_pins="1"/>
            <clock name="clk" num_pins="1"/> 

            <!-- Define LUT -->
            <pb_type name="lut6" blif_model=".names" num_pb="1" class="lut" spice_model_name="lut6">
              <input name="in" num_pins="6" port_class="lut_in"/>
              <output name="out" num_pins="1" port_class="lut_out"/>
              <!-- LUT timing using delay matrix -->
              <!-- These are the physical delay inputs on a Stratix IV LUT but because VPR cannot do LUT rebalancing,
                       we instead take the average of these numbers to get more stable results
                  82e-12
                  173e-12
                  261e-12
                  263e-12
                  398e-12
                  397e-12
                  -->
              <delay_matrix type="max" in_port="lut6.in" out_port="lut6.out">
                8.1e-10
                8.1e-10
                8.1e-10
                8.1e-10
                8.1e-10
                8.1e-10
              </delay_matrix>
              <power method="pin-toggle">
                <port name="in" energy_per_toggle="1.49e-12"/>
                <static_power power_per_instance="1.25e-06"/>
              </power>
            </pb_type>

            <!-- Define flip-flop -->
            <pb_type name="ff" blif_model=".latch" num_pb="1" class="flipflop" spice_model_name="static_dff">
              <input name="D" num_pins="1" port_class="D"/>
              <output name="Q" num_pins="1" port_class="Q"/>
              <clock name="clk" num_pins="1" port_class="clock"/>
              <T_setup value="6.85e-10" port="ff.D" clock="clk"/>
              <T_clock_to_Q max="1.1e-10" port="ff.Q" clock="clk"/>
              <power method="pin-toggle">
                <port name="Q" energy_per_toggle="1.3e-13"/>
                <static_power power_per_instance="5.025e-7"/>
              </power>
            </pb_type>

            <interconnect>
              <direct name="direct1" input="ble6.in" output="lut6[0:0].in"/>
              <direct name="direct2" input="lut6.out" output="ff.D">
                <!-- Advanced user option that tells CAD tool to find LUT+FF pairs in netlist -->
                <pack_pattern name="ble6" in_port="lut6.out" out_port="ff.D"/>
              </direct>
              <direct name="direct3" input="ble6.clk" output="ff.clk"/>                    
              <mux name="mux1" input="ff.Q lut6.out" output="ble6.out" spice_model_name="ble_mux_buffered">
                <!-- LUT to output is faster than FF to output on a Stratix IV -->
                <delay_constant max="3.3e-10" in_port="lut6.out" out_port="ble6.out" />
                <delay_constant max="3.3e-10" in_port="ff.Q" out_port="ble6.out" />
              </mux>
            </interconnect>
          </pb_type>
          <interconnect>
            <direct name="direct1" input="fle.in" output="ble6.in"/>
            <direct name="direct2" input="ble6.out" output="fle.out[0:0]"/>
            <direct name="direct3" input="fle.clk" output="ble6.clk"/>
          </interconnect>
        </mode>
        <!-- 6-LUT mode definition end -->
      </pb_type>
      <interconnect>
        <!-- We use a full crossbar to get logical equivalence at inputs of CLB 
		     The delays below come from Stratix IV. the delay through a connection block
		     input mux + the crossbar in Stratix IV is 167 ps. We already have a 72 ps 
		     delay on the connection block input mux (modeled by Ian Kuon), so the remaining
		     delay within the crossbar is 95 ps. 
		     The delays of cluster feedbacks in Stratix IV is 100 ps, when driven by a LUT.
		     Since all our outputs LUT outputs go to a BLE output, and have a delay of 
		     25 ps to do so, we subtract 25 ps from the 100 ps delay of a feedback
		     to get the part that should be marked on the crossbar.	 -->
        <complete name="crossbar" input="clb.I fle[9:0].out" output="fle[9:0].in" spice_model_name="localrouting_mux_buffered">
          <delay_constant max="5e-10" in_port="clb.I" out_port="fle[9:0].in" />
          <delay_constant max="5e-10" in_port="fle[9:0].out" out_port="fle[9:0].in" />
        </complete>
        <complete name="clks" input="clb.clk" output="fle[9:0].clk">
        </complete>

        <!-- This way of specifying direct connection to clb outputs is important because this architecture uses automatic spreading of opins.  
               By grouping to output pins in this fashion, if a logic block is completely filled by 6-LUTs, 
               then the outputs those 6-LUTs take get evenly distributed across all four sides of the CLB instead of clumped on two sides (which is what happens with a more
               naive specification).
          -->
        <direct name="clbouts1" input="fle[9:0].out[0:0]" output="clb.O[9:0]"/>
        <direct name="clbouts2" input="fle[9:0].out[1:1]" output="clb.O[19:10]"/>
      </interconnect>

      <fc default_in_type="frac" default_in_val="0.15" default_out_type="frac" default_out_val="0.10"/>
      <pinlocations pattern="spread"/>
      <gridlocations>
        <loc type="fill" priority="1"/>
      </gridlocations>
    </pb_type>
  </complexblocklist>
  <power>
    <local_interconnect C_wire="0"/>
    <buffers logical_effort_factor="4"/>
    <mux_transistor_size mux_transistor_size="3.7"/>
  </power>
  <clocks>
    <clock buffer_size="0" C_wire="0"/>
  </clocks>
</architecture>
